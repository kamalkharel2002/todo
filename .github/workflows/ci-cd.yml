name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  API_BASE_URL: http://localhost:5001/api

jobs:
  # Backend Build and Test
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        uses: docker/build-push-action@v6
        with:
          context: ./Backend
          file: ./Backend/Dockerfile.dev
          push: false
          load: true
          tags: todo-backend:ci
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Backend build summary
        run: echo "✅ Backend build completed successfully"

  # Frontend Build and Test
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug - Check Frontend structure
        run: |
          echo "=== Checking Frontend directory ==="
          ls -la Frontend/ || echo "Frontend directory not found"
          echo ""
          echo "=== Looking for Dockerfiles ==="
          find . -name "Dockerfile*" -type f
          echo ""
          echo "=== Full directory tree ==="
          tree -L 3 Frontend/ || ls -R Frontend/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./Frontend
          file: ./Frontend/Dockerfile.dev
          push: false
          load: true
          tags: todo-frontend:ci
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Frontend build summary
        run: echo "✅ Frontend build completed successfully"

  # Integration Tests
  integration-tests:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        uses: docker/build-push-action@v6
        with:
          context: ./Backend
          file: ./Backend/Dockerfile.dev
          push: false
          load: true
          tags: todo-backend:ci
          cache-from: type=gha

      - name: Build frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./Frontend
          file: ./Frontend/Dockerfile.dev
          push: false
          load: true
          tags: todo-frontend:ci
          cache-from: type=gha

      - name: Start services with docker compose
        run: docker compose up -d

      - name: Wait for MySQL
        run: |
          echo "⏳ Waiting for MySQL..."
          for i in {1..30}; do
            if docker exec todo-mysql mysqladmin ping -h localhost --silent; then
              echo "✅ MySQL is ready!"
              exit 0
            fi
            sleep 2
          done
          echo "❌ MySQL timeout"
          docker logs todo-mysql
          exit 1

      - name: Wait for Redis
        run: |
          echo "⏳ Waiting for Redis..."
          for i in {1..30}; do
            if docker exec todo-redis redis-cli ping | grep -q PONG; then
              echo "✅ Redis is ready!"
              exit 0
            fi
            sleep 2
          done
          echo "❌ Redis timeout"
          docker logs todo-redis
          exit 1

      - name: Wait for Backend
        run: |
          echo "⏳ Waiting for Backend..."
          for i in {1..30}; do
            if curl -sf http://localhost:5001/api/health >/dev/null 2>&1; then
              echo "✅ Backend is ready!"
              exit 0
            fi
            sleep 2
          done
          echo "❌ Backend timeout"
          docker logs todo-backend
          exit 1

      - name: Verify services
        run: |
          echo "=== Service Status ==="
          docker compose ps
          echo ""
          echo "=== Network Check ==="
          docker network ls
          echo ""
          echo "=== Backend Health ==="
          curl -v http://localhost:5001/api/health || true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: tests/package-lock.json

      - name: Install test dependencies
        working-directory: tests
        run: npm ci || npm install

      - name: Run integration tests
        working-directory: tests
        env:
          API_BASE_URL: ${{ env.API_BASE_URL }}
        run: npm test -- --runInBand

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Backend Logs ==="
          docker logs todo-backend
          echo ""
          echo "=== Frontend Logs ==="
          docker logs todo-frontend
          echo ""
          echo "=== MySQL Logs ==="
          docker logs todo-mysql
          echo ""
          echo "=== Redis Logs ==="
          docker logs todo-redis

      - name: Cleanup
        if: always()
        run: docker compose down -v

  # Deploy to Docker Hub (only on main branch push)
  deploy:
    needs: [backend, frontend, integration-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./Backend
          file: ./Backend/Dockerfile.dev
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/todo-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./Frontend
          file: ./Frontend/Dockerfile.dev
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/todo-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deployment summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Published Images" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKER_USERNAME }}/todo-backend:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKER_USERNAME }}/todo-backend:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKER_USERNAME }}/todo-frontend:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY